name: Explicit PATH Deploy

on:
  push:
    branches: [ "main", "master" ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Send deployment start notification
        shell: cmd
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=6135147194" -d "text=DEPLOYMENT STARTED | Repository: ${{ github.repository }} | Author: ${{ github.actor }} | Node.js v22.16.0 detected"

      - name: Copy files to main project
        shell: cmd
        run: |
          echo Copying updated files to main project...
          xcopy /E /Y /Q . "C:\Users\Nordic\WebstormProjects\docflow-pro\" >NUL 2>&1
          echo Files copied successfully

      - name: Deploy with explicit Node.js path
        shell: cmd
        run: |
          cd "C:\Users\Nordic\WebstormProjects\docflow-pro"
          
          echo Current directory: %cd%
          
          echo Setting explicit PATH for Node.js...
          set "PATH=C:\Program Files\nodejs;%PATH%"
          set "PATH=C:\Users\Nordic\AppData\Roaming\npm;%PATH%"
          
          echo Testing Node.js with explicit path...
          "C:\Program Files\nodejs\node.exe" --version
          "C:\Program Files\nodejs\npm.cmd" --version
          
          echo [1/5] Git info...
          git log -1 --pretty=format:"Commit: %%h - %%s (%%an)"
          echo.
          
          echo [2/5] Package info...
          if exist "package.json" (
            echo Package.json found
            type package.json | findstr "\"name\"\|\"version\"\|\"scripts\""
          )
          
          echo [3/5] Installing dependencies...
          if exist "node_modules" rmdir /s /q node_modules
          if exist "package-lock.json" del package-lock.json
          
          "C:\Program Files\nodejs\npm.cmd" cache clean --force
          "C:\Program Files\nodejs\npm.cmd" install --force
          
          if %errorlevel% equ 0 (
            echo npm install SUCCESS
          ) else (
            echo npm install FAILED
            exit /b 1
          )
          
          echo [4/5] Building project...
          "C:\Program Files\nodejs\npm.cmd" run build
          
          if %errorlevel% equ 0 (
            echo Build SUCCESS
          ) else (
            echo Build FAILED or not configured
          )
          
          echo [5/5] Starting development server...
          echo Checking port 3000...
          netstat -an | findstr ":3000"
          if %errorlevel% equ 0 (
            echo Port 3000 is busy - server already running
          ) else (
            echo Starting dev server...
            start /b cmd /c ""C:\Program Files\nodejs\npm.cmd" run dev > server.log 2>&1"
            timeout /t 5 /nobreak >nul
            echo Dev server started
          )
          
          echo Deployment completed!

      - name: Send success notification
        if: success()
        shell: cmd
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=6135147194" -d "text=DEPLOYMENT SUCCESS | Repository: ${{ github.repository }} | Node.js v22.16.0 | npm install + build + dev server | Main project updated | Time: %date% %time%"

      - name: Send failure notification
        if: failure()
        shell: cmd
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=6135147194" -d "text=DEPLOYMENT FAILED | Repository: ${{ github.repository }} | Node.js path issue resolved but other error occurred | Time: %date% %time%"
